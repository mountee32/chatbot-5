You are Tom, the worlds greatest software engineer.

This is my website chat program being developed in replit IDE based on flask

It has multi-user chatting with a LLM

this is a chat based website for young christians to explore their fair

If recommending changes to a specifc file then please give the full file contents and not just the changes, there is no need to also describe the changes unless there is a problem I need to be aware of. 

Don't be lazy, give the full file for each changing file and don't expect me to merge on and new files.
----- Instructions -----------
add avatar next to the chat messages like the mock up image.  the avatar svg files are held in the assets folder and the name of the one to use in the menu config file e.g. "name": "The Valley of Wisdom",
"icon": "fas fa-seedling",
"prompt": "You are a game master for 'The Valley of Wisdom'. Guide the player through a serene valley where wisdom, discernment, and prayer help uncover hidden treasures.",
"avatar": "woman1.svg"
----------------
## templates/index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Christian Children's Education Chat</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/12.3.2/markdown-it.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>
    <div class="container">
        <div class="menu-container" id="menu-container">
            <div class="menu-header">
                <button id="menu-back-button" class="back-button" style="display: none;">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <div class="menu-title" id="menu-title">Main Menu</div>
            </div>
            <div id="menu-items"></div>
        </div>
        <div class="chat-container" id="chat-container">
            <div class="chat-header">
                <button id="chat-back-button" class="back-button">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <div class="profile-pic"></div>
                <div class="chat-title">Christian Children's Education Chat</div>
                <div class="header-icons">
                    <span><i class="fas fa-phone"></i></span>
                    <span><i class="fas fa-video"></i></span>
                    <span><i class="fas fa-ellipsis-v"></i></span>
                </div>
            </div>
            <div id="messages-container" class="messages-container"></div>
            <div id="suggestions-container" class="suggestions-container"></div>
            <div class="input-area">
                <input type="text" id="user-input" placeholder="Type your message...">
                <button id="send-button"><i class="fas fa-paper-plane"></i></button>
            </div>
        </div>
    </div>

    <script>
        const md = window.markdownit();
        const menuContainer = document.getElementById('menu-container');
        const menuItems = document.getElementById('menu-items');
        const menuTitle = document.getElementById('menu-title');
        const menuBackButton = document.getElementById('menu-back-button');
        const chatContainer = document.getElementById('chat-container');
        const messagesContainer = document.getElementById('messages-container');
        const suggestionsContainer = document.getElementById('suggestions-container');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');
        const chatBackButton = document.getElementById('chat-back-button');

        const emoticons = {
            ':)': 'üòä', ':(': 'üò¢', ':D': 'üòÉ', ';)': 'üòâ', ':P': 'üòõ',
            ':|': 'üòê', ':\'(': 'üò≠', ':O': 'üòÆ', '<3': '‚ù§Ô∏è', '>:(': 'üò†'
        };

        let currentMenu = 'main';
        let menuConfig;
        let currentSubmenu;

        function replaceEmoticons(text) {
            return text.replace(/:\)|:\(|:D|;\)|:P|:\||:'\(|:O|<3|>:\(/g, match => emoticons[match] || match);
        }

        function renderContent(content) {
            const emoticonReplaced = replaceEmoticons(content);
            return md.render(emoticonReplaced);
        }

        function addMessage(role, content) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${role}-message`;
            const contentDiv = document.createElement('div');
            contentDiv.className = 'message-content';
            contentDiv.innerHTML = renderContent(content);
            messageDiv.appendChild(contentDiv);

            const timestamp = document.createElement('div');
            timestamp.className = 'timestamp';
            timestamp.textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            messageDiv.appendChild(timestamp);

            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
            return contentDiv;
        }

        function createSuggestionButton(suggestion) {
            const button = document.createElement('button');
            button.className = 'suggestion-button';
            button.innerHTML = `<i class="${suggestion.icon}"></i> ${suggestion.text}`;
            button.addEventListener('click', () => {
                userInput.value = suggestion.text;
                sendMessage();
                removeSuggestions();
            });
            return button;
        }

        function removeSuggestions() {
            suggestionsContainer.innerHTML = '';
        }

        function updateSuggestions() {
            fetch('/suggestions')
                .then(response => response.json())
                .then(suggestions => {
                    removeSuggestions();
                    suggestions.forEach(suggestion => {
                        suggestionsContainer.appendChild(createSuggestionButton(suggestion));
                    });
                });
        }

        function sendMessage(message = null) {
            const userMessage = message || userInput.value.trim();
            if (userMessage) {
                addMessage('user', userMessage);
                userInput.value = '';
                removeSuggestions();

                fetch('/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: userMessage }),
                })
                .then(response => {
                    const reader = response.body.getReader();
                    const decoder = new TextDecoder();
                    let assistantMessage = '';
                    let messageElement = null;

                    function readStream() {
                        reader.read().then(({ done, value }) => {
                            if (done) {
                                updateSuggestions();
                                return;
                            }
                            const chunk = decoder.decode(value);
                            assistantMessage += chunk;
                            if (!messageElement) {
                                messageElement = addMessage('assistant', '');
                            }
                            messageElement.innerHTML = renderContent(assistantMessage);
                            messagesContainer.scrollTop = messagesContainer.scrollHeight;
                            readStream();
                        });
                    }

                    readStream();
                });
            }
        }

        function showMainMenu() {
            menuContainer.style.display = 'flex';
            chatContainer.style.display = 'none';
            currentMenu = 'main';
            menuBackButton.style.display = 'none';
            menuTitle.textContent = 'Main Menu';
            createMenu(menuConfig);
        }

        function showSubMenu(submenu, title) {
            menuContainer.style.display = 'flex';
            chatContainer.style.display = 'none';
            currentMenu = 'sub';
            menuBackButton.style.display = 'block';
            menuTitle.textContent = title;
            createSubmenu(submenu);
        }

        function showChat() {
            menuContainer.style.display = 'none';
            chatContainer.style.display = 'flex';
            currentMenu = 'chat';
        }

        function createMenu(menuConfig) {
            menuItems.innerHTML = '';
            menuConfig.menu.forEach(item => {
                const menuItem = document.createElement('div');
                menuItem.className = 'menu-item';
                menuItem.innerHTML = `<i class="${item.icon}"></i>${item.name}`;
                menuItems.appendChild(menuItem);

                menuItem.addEventListener('click', () => {
                    currentSubmenu = item.submenu;
                    showSubMenu(item.submenu, item.name);
                });
            });
        }

        function createSubmenu(submenu) {
            menuItems.innerHTML = '';
            submenu.forEach(subItem => {
                const submenuItem = document.createElement('div');
                submenuItem.className = 'submenu-item';
                submenuItem.innerHTML = `<i class="${subItem.icon}"></i>${subItem.name}`;
                submenuItem.addEventListener('click', () => {
                    fetch('/set_prompt', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ prompt: subItem.prompt }),
                    })
                    .then(() => {
                        showChat();
                        resetChat();
                        sendMessage("Hi, I'm ready to start!");
                    });
                });
                menuItems.appendChild(submenuItem);
            });
        }

        function resetChat() {
            messagesContainer.innerHTML = '';
            removeSuggestions();
        }

        function initializeMenu(config) {
            menuConfig = config;
            showMainMenu();
        }

        sendButton.addEventListener('click', () => sendMessage());
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        menuBackButton.addEventListener('click', () => {
            if (currentMenu === 'sub') {
                showMainMenu();
            }
        });

        chatBackButton.addEventListener('click', () => {
            if (currentMenu === 'chat') {
                showSubMenu(currentSubmenu, menuTitle.textContent);
            }
        });

        // Initialize the menu
        initializeMenu({{ menu_config | tojson | safe }});
    </script>
</body>
</html>
## test_llm_chat.py

import os
import json
import requests
import logging

# Set up logging
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

OPENROUTER_API_KEY = os.environ['OPENROUTER_API_KEY']
API_URL = "https://openrouter.ai/api/v1/chat/completions"
MODEL = "openai/gpt-4"

def generate_response(messages, current_prompt):
		headers = {
				"Authorization": f"Bearer {OPENROUTER_API_KEY}",
				"HTTP-Referer": "https://your-app-url.com",
				"X-Title": "OpenRouter Chatbot",
				"Content-Type": "application/json"
		}

		system_message = {
				"role": "system",
				"content": current_prompt or "You can use Markdown syntax and emoticons in your responses. Common emoticons like :), :(, :D will be automatically converted to emojis."
		}

		messages = [system_message] + messages

		data = {
				"model": MODEL,
				"messages": messages,
				"stream": True
		}

		response = requests.post(API_URL, headers=headers, json=data, stream=True)

		for line in response.iter_lines():
				if line:
						line = line.decode('utf-8')
						if line.startswith('data: '):
								line = line[6:]
								if line.strip() == '[DONE]':
										break
								try:
										json_object = json.loads(line)
										content = json_object['choices'][0]['delta'].get('content', '')
										if content:
												yield content
								except json.JSONDecodeError:
										continue

def generate_suggestions(messages, current_prompt):
		headers = {
				"Authorization": f"Bearer {OPENROUTER_API_KEY}",
				"HTTP-Referer": "https://your-app-url.com",
				"X-Title": "OpenRouter Chatbot",
				"Content-Type": "application/json"
		}

		schema = {
				"type": "object",
				"properties": {
						"suggestions": {
								"type": "array",
								"items": {
										"type": "object",
										"properties": {
												"text": {"type": "string"},
												"icon": {"type": "string"}
										},
										"required": ["text", "icon"]
								}
						}
				},
				"required": ["suggestions"]
		}

		system_message = {
				"role": "system",
				"content": f"""You are a suggestion generator for a chatbot. The current context is:

				{current_prompt}

				Based on this context and the last message in the conversation, generate 2-4 relevant, short (max 10 words) suggestions for the user's next message. 

				Provide the suggestions in JSON format according to the following schema:

				{json.dumps(schema, indent=2)}

				Use 'fas fa-' prefix for FontAwesome icons in the 'icon' field."""
		}

		# Use only the last message from the chat history
		last_message = messages[-1] if messages else {"role": "user", "content": ""}

		full_messages = [system_message, last_message]

		data = {
				"model": MODEL,
				"messages": full_messages,
				"max_tokens": 250
		}

		logger.info("Sending request to API")

		try:
				response = requests.post(API_URL, headers=headers, json=data)
				response.raise_for_status()

				response_json = response.json()
				logger.debug(f"API Response: {json.dumps(response_json, indent=2)}")

				if 'choices' not in response_json:
						logger.error(f"Unexpected API response structure. Response: {json.dumps(response_json, indent=2)}")
						return []

				content = response_json['choices'][0]['message']['content']
				logger.info(f"Content from API: {content}")

				try:
						suggestions_data = json.loads(content)
						if isinstance(suggestions_data, dict) and 'suggestions' in suggestions_data:
								suggestions = suggestions_data['suggestions']
								logger.info(f"Parsed suggestions: {json.dumps(suggestions, indent=2)}")
								return suggestions
						else:
								logger.warning(f"Unexpected content structure. Content: {content}")
								return []
				except json.JSONDecodeError:
						logger.warning(f"Failed to parse suggestions as JSON. Content: {content}")
						return []

		except requests.RequestException as e:
				logger.error(f"Error making request to API: {str(e)}")
				return []

		except (KeyError, IndexError, TypeError) as e:
				logger.error(f"Error parsing API response: {str(e)}")
				logger.error(f"Response JSON: {json.dumps(response_json, indent=2)}")
				return []

# Example usage
if __name__ == "__main__":
		sample_messages = [
				{"role": "user", "content": "Hi, I'm ready to start!"},
				{"role": "assistant", "content": "Great! What would you like to learn about today?"}
		]
		sample_prompt = "You are a helpful assistant for a learning platform."

		logger.info("Generating suggestions...")
		suggestions = generate_suggestions(sample_messages, sample_prompt)
		logger.info(f"Final suggestions: {json.dumps(suggestions, indent=2)}")
## main.py

import os
import logging
import json
import time
from flask import Flask, render_template, request, jsonify, Response, stream_with_context
from llm_chat import generate_response, generate_suggestions

# Set up Python's logging
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s', filename='log.txt', filemode='a')

app = Flask(__name__)

conversation_history = []
current_prompt = ""
current_mode = ""

def load_menu_config():
    with open('menu_config.json', 'r') as f:
        return json.load(f)

menu_config = load_menu_config()

def log_event(event_type, data):
    log_entry = f"{time.time()} - {event_type} - {json.dumps(data)}\n"
    with open('log.txt', 'a') as f:
        f.write(log_entry)
    logging.info(f"Event: {event_type}, Data: {json.dumps(data, indent=2)}")

@app.route('/')
def home():
    log_event('page_load', {'page': 'home'})
    return render_template('index.html', menu_config=menu_config)

@app.route('/chat', methods=['POST'])
def chat():
    global conversation_history
    user_message = request.json['message']
    conversation_history.append({"role": "user", "content": user_message})

    log_event('user_message', {
        'message': user_message,
        'prompt': current_prompt,
        'mode': current_mode
    })

    def generate():
        assistant_message = ""
        for content in generate_response(conversation_history, current_prompt):
            assistant_message += content
            yield content

        conversation_history.append({"role": "assistant", "content": assistant_message})

        log_event('assistant_message', {
            'message': assistant_message,
            'prompt': current_prompt,
            'mode': current_mode
        })

    return Response(stream_with_context(generate()), content_type='text/plain')

@app.route('/suggestions', methods=['GET'])
def get_suggestions():
    global conversation_history
    suggestions_data = generate_suggestions(conversation_history, current_prompt)

    # Check if suggestions_data is a dictionary with a 'suggestions' key
    if isinstance(suggestions_data, dict) and 'suggestions' in suggestions_data:
        suggestions = suggestions_data['suggestions']
    else:
        suggestions = suggestions_data  # Assume it's already the correct format

    log_event('suggestions_generated', {
        'suggestions': suggestions,
        'conversation_history': conversation_history
    })
    logging.info(f"Generated suggestions: {json.dumps(suggestions, indent=2)}")
    return jsonify(suggestions)

@app.route('/set_prompt', methods=['POST'])
def set_prompt():
    global current_prompt, current_mode, conversation_history
    current_prompt = request.json['prompt']
    current_mode = request.json.get('mode', '')
    conversation_history = []  # Reset conversation history when changing prompts
    log_event('prompt_set', {
        'prompt': current_prompt,
        'mode': current_mode
    })
    return jsonify({"status": "success"})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
## llm_chat.py

import os
import json
import requests
import logging

# Set up logging
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

OPENROUTER_API_KEY = os.environ['OPENROUTER_API_KEY']
API_URL = "https://openrouter.ai/api/v1/chat/completions"
CHATMODEL = "openai/gpt-4o"
SUGGESTMODEL = "openai/gpt-4"

def generate_response(messages, current_prompt):
		headers = {
				"Authorization": f"Bearer {OPENROUTER_API_KEY}",
				"HTTP-Referer": "https://your-app-url.com",
				"X-Title": "OpenRouter Chatbot",
				"Content-Type": "application/json"
		}

		system_message = {
				"role": "system",
				"content": current_prompt or "You can use Markdown syntax and emoticons in your responses. Common emoticons like :), :(, :D will be automatically converted to emojis."
		}

		messages = [system_message] + messages

		data = {
				"model": CHATMODEL,
				"messages": messages,
				"stream": True
		}

		response = requests.post(API_URL, headers=headers, json=data, stream=True)

		for line in response.iter_lines():
				if line:
						line = line.decode('utf-8')
						if line.startswith('data: '):
								line = line[6:]
								if line.strip() == '[DONE]':
										break
								try:
										json_object = json.loads(line)
										content = json_object['choices'][0]['delta'].get('content', '')
										if content:
												yield content
								except json.JSONDecodeError:
										continue

def generate_suggestions(messages, current_prompt):
		headers = {
				"Authorization": f"Bearer {OPENROUTER_API_KEY}",
				"HTTP-Referer": "https://your-app-url.com",
				"X-Title": "OpenRouter Chatbot",
				"Content-Type": "application/json"
		}

		schema = {
				"type": "object",
				"properties": {
						"suggestions": {
								"type": "array",
								"items": {
										"type": "object",
										"properties": {
												"text": {"type": "string"},
												"icon": {"type": "string"}
										},
										"required": ["text", "icon"]
								}
						}
				},
				"required": ["suggestions"]
		}

		system_message = {
				"role": "system",
				"content": f"""You are a suggestion generator for a chatbot. The current context is:

				{current_prompt}

				Based on this context and the last message in the conversation, generate 2-4 relevant, short (max 10 words) suggestions for the user's next message. If the last message contains multiple choice answers then use those as the basis to suggest follow on responses

				Provide the suggestions in JSON format according to the following schema:

				{json.dumps(schema, indent=2)}

				Use 'fas fa-' prefix for FontAwesome icons in the 'icon' field."""
		}

		# Use only the last message from the chat history
		last_message = messages[-1] if messages else {"role": "user", "content": ""}

		full_messages = [system_message, last_message]

		data = {
				"model": SUGGESTMODEL,
				"messages": full_messages,
				"max_tokens": 250
		}

		logger.info("Sending request to API")

		try:
				response = requests.post(API_URL, headers=headers, json=data)
				response.raise_for_status()

				response_json = response.json()
				logger.debug(f"API Response: {json.dumps(response_json, indent=2)}")

				if 'choices' not in response_json:
						logger.error(f"Unexpected API response structure. Response: {json.dumps(response_json, indent=2)}")
						return []

				content = response_json['choices'][0]['message']['content']
				logger.info(f"Content from API: {content}")

				try:
						suggestions_data = json.loads(content)
						if isinstance(suggestions_data, dict) and 'suggestions' in suggestions_data:
								suggestions = suggestions_data['suggestions']
						elif isinstance(suggestions_data, list):
								suggestions = suggestions_data
						else:
								logger.warning(f"Unexpected content structure. Content: {content}")
								return []

						logger.info(f"Parsed suggestions: {json.dumps(suggestions, indent=2)}")
						return suggestions
				except json.JSONDecodeError:
						logger.warning(f"Failed to parse suggestions as JSON. Content: {content}")
						return []

		except requests.RequestException as e:
				logger.error(f"Error making request to API: {str(e)}")
				return []

		except (KeyError, IndexError, TypeError) as e:
				logger.error(f"Error parsing API response: {str(e)}")
				logger.error(f"Response JSON: {json.dumps(response_json, indent=2)}")
				return []

# Example usage
if __name__ == "__main__":
		sample_messages = [
				{"role": "user", "content": "Hi, I'm ready to start!"},
				{"role": "assistant", "content": "Great! What would you like to learn about today?"}
		]
		sample_prompt = "You are a helpful assistant for a learning platform."

		logger.info("Generating suggestions...")
		suggestions = generate_suggestions(sample_messages, sample_prompt)
		logger.info(f"Final suggestions: {json.dumps(suggestions, indent=2)}")
## log.txt

1719147676.3016176 - page_load - {"page": "home"}
1719147679.388176 - prompt_set - {"prompt": "You are a friendly and encouraging math tutor for children aged 6-12. Your role is to present age-appropriate math questions, provide gentle guidance, and offer positive reinforcement. Users can specify the desired skill level: beginner, intermediate, or advanced. At the start of the interaction, ask the user to specify the desired skill level if not already provided. Adjust the difficulty of math problems based on the specified skill level: Beginner: Basic addition, subtraction, simple shapes, and counting; Intermediate: Multiplication, division, fractions, and simple word problems; Advanced: More complex fractions, decimals, geometry, and multi-step word problems. Use 4 multiple choice options format. Present math problems suitable for the chosen skill level, using simple, clear language. Offer multiple-choice options when appropriate, or ask for numerical answers. Ask 5 questions and present a summary at the end. If a child struggles, provide hints or break down the problem into smaller steps. Always respond with enthusiasm and encouragement, regardless of whether the answer is correct or not. For correct answers, offer praise and a brief explanation of why the answer is correct. For incorrect answers, gently explain the error and guide the child towards the correct solution. Incorporate fun, relatable examples using everyday objects or situations children can easily understand. Limit each interaction to one question at a time to maintain focus. If asked, provide brief, child-friendly explanations of mathematical concepts. Maintain a positive, patient, and supportive tone throughout the interaction. Be prepared to adjust the difficulty level if the current level seems too easy or too challenging for the child. Remember, your goal is to make math enjoyable and accessible for children while helping them learn and improve their skills at their appropriate level.", "mode": ""}
1719147679.5098917 - user_message - {"message": "Hi, I'm ready to start!", "prompt": "You are a friendly and encouraging math tutor for children aged 6-12. Your role is to present age-appropriate math questions, provide gentle guidance, and offer positive reinforcement. Users can specify the desired skill level: beginner, intermediate, or advanced. At the start of the interaction, ask the user to specify the desired skill level if not already provided. Adjust the difficulty of math problems based on the specified skill level: Beginner: Basic addition, subtraction, simple shapes, and counting; Intermediate: Multiplication, division, fractions, and simple word problems; Advanced: More complex fractions, decimals, geometry, and multi-step word problems. Use 4 multiple choice options format. Present math problems suitable for the chosen skill level, using simple, clear language. Offer multiple-choice options when appropriate, or ask for numerical answers. Ask 5 questions and present a summary at the end. If a child struggles, provide hints or break down the problem into smaller steps. Always respond with enthusiasm and encouragement, regardless of whether the answer is correct or not. For correct answers, offer praise and a brief explanation of why the answer is correct. For incorrect answers, gently explain the error and guide the child towards the correct solution. Incorporate fun, relatable examples using everyday objects or situations children can easily understand. Limit each interaction to one question at a time to maintain focus. If asked, provide brief, child-friendly explanations of mathematical concepts. Maintain a positive, patient, and supportive tone throughout the interaction. Be prepared to adjust the difficulty level if the current level seems too easy or too challenging for the child. Remember, your goal is to make math enjoyable and accessible for children while helping them learn and improve their skills at their appropriate level.", "mode": ""}
1719147682.1657124 - assistant_message - {"message": "Great! I'm excited that you're ready to start learning some math! \n\nLet's begin by deciding on the skill level that we'll be working at today. Please choose one:\n\n1. Beginner: Basic addition, subtraction, simple shapes, and counting.\n2. Intermediate: Multiplication, division, fractions, and simple word problems.\n3. Advanced: More complex fractions, decimals, geometry, and multi-step word problems.\n\nWhich one would you like to go with?", "prompt": "You are a friendly and encouraging math tutor for children aged 6-12. Your role is to present age-appropriate math questions, provide gentle guidance, and offer positive reinforcement. Users can specify the desired skill level: beginner, intermediate, or advanced. At the start of the interaction, ask the user to specify the desired skill level if not already provided. Adjust the difficulty of math problems based on the specified skill level: Beginner: Basic addition, subtraction, simple shapes, and counting; Intermediate: Multiplication, division, fractions, and simple word problems; Advanced: More complex fractions, decimals, geometry, and multi-step word problems. Use 4 multiple choice options format. Present math problems suitable for the chosen skill level, using simple, clear language. Offer multiple-choice options when appropriate, or ask for numerical answers. Ask 5 questions and present a summary at the end. If a child struggles, provide hints or break down the problem into smaller steps. Always respond with enthusiasm and encouragement, regardless of whether the answer is correct or not. For correct answers, offer praise and a brief explanation of why the answer is correct. For incorrect answers, gently explain the error and guide the child towards the correct solution. Incorporate fun, relatable examples using everyday objects or situations children can easily understand. Limit each interaction to one question at a time to maintain focus. If asked, provide brief, child-friendly explanations of mathematical concepts. Maintain a positive, patient, and supportive tone throughout the interaction. Be prepared to adjust the difficulty level if the current level seems too easy or too challenging for the child. Remember, your goal is to make math enjoyable and accessible for children while helping them learn and improve their skills at their appropriate level.", "mode": ""}
1719147695.26049 - suggestions_generated - {"suggestions": [], "conversation_history": [{"role": "user", "content": "Hi, I'm ready to start!"}, {"role": "assistant", "content": "Great! I'm excited that you're ready to start learning some math! \n\nLet's begin by deciding on the skill level that we'll be working at today. Please choose one:\n\n1. Beginner: Basic addition, subtraction, simple shapes, and counting.\n2. Intermediate: Multiplication, division, fractions, and simple word problems.\n3. Advanced: More complex fractions, decimals, geometry, and multi-step word problems.\n\nWhich one would you like to go with?"}]}
1719147695.262663 - prompt_set - {"prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147695.2635617 - prompt_set - {"prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147695.3822289 - user_message - {"message": "Hi, I'm ready to start!", "prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147709.8173213 - assistant_message - {"message": "Great! Let's start the dialogue with some common questions kids might have about science and religion.\n\n**Question 1: How did the universe begin?**\n\n**WLC:** Many people believe that the universe began with God creating it. There's something called the \"Big Bang,\" which scientists say was the moment when the universe started expanding from a very small point. I think God made this happen because everything that begins has a cause, and God is the cause of the universe.\n\n**Dawkins:** Scientists agree that the universe started with the Big Bang, but many of them don't think it needed a god to happen. Instead, it was a natural event in the laws of physics. We don't know everything, but we're learning more every day by studying and exploring the universe.\n\n**Question 2: Can you believe in science and religion at the same time?**\n\n**WLC:** Yes, I think you can believe in both. Science helps us understand how things work in the world, and religion answers why we are here and what our purpose is. They can work together to give us a fuller understanding of life.\n\n**Dawkins:** I believe that science is the best way to understand the world because it relies on evidence and experiments. Religion and science sometimes give different answers, and I think it's important to follow what we can test and prove.\n\n**Question 3: What happens after we die?**\n\n**WLC:** According to my Christian faith, I believe that after we die, we go to be with God forever if we have a relationship with Him. There is heaven, a wonderful place, and this belief gives many people hope and comfort.\n\n**Dawkins:** From a scientific point of view, we don't have any evidence that there's life after death. Our bodies stop working, and that's the end. Some people might find this idea scary, but it also makes our time alive very special and precious.\n\n**Question 4: Why do good and bad things happen?**\n\n**WLC:** Good and bad things happen because we live in a world where we have free will, which means we can make choices. Sometimes people make bad choices, which cause suffering. Also, I believe that God has a bigger plan, and even though we don\u2019t always understand it, there\u2019s a reason behind everything.\n\n**Dawkins:** Good and bad things happen because of chance, our actions, and natural events. For example, if a tree falls in a storm, it's because of the wind, not because someone or something made it happen for a reason. We can try to make the world better by understanding how things work and making good choices.\n\n**Question 5: Why do people believe different things?**\n\n**WLC:** People believe different things because they grow up in different cultures and families, and have different experiences. I believe that God wants everyone to know Him, but people have to make their own choices about what to believe.\n\n**Dawkins:** People believe different things because human brains are very good at creating stories and explanations, especially before we had modern science. Different cultures developed their own stories and beliefs to explain the world around them, and these beliefs have been passed down through generations.\n\nThese answers should give you an idea of how people can see the same questions in different ways. It's important to think about these ideas and decide what you believe!", "prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147709.8186615 - user_message - {"message": "Hi, I'm ready to start!", "prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147719.2729442 - assistant_message - {"message": "Great! Let's start the dialogue with some interesting questions kids might have about the world and our place in it.\n\n**Question 1: Why is the sky blue?**\n\n**WLC:** The sky appears blue because of the way sunlight interacts with our atmosphere. God created the natural world with these fascinating properties, and science helps us understand how they work.\n\n**Dawkins:** The sky is blue because of a process called Rayleigh scattering. Sunlight is made up of many colors, but the molecules in the Earth's atmosphere scatter blue light more effectively, making the sky appear blue to our eyes.\n\n**Question 2: Why do we have different seasons?**\n\n**WLC:** We have different seasons because of the way God designed the Earth. It tilts as it orbits around the sun, which changes the amount of sunlight different parts of the world receive, creating seasons.\n\n**Dawkins:** Seasons happen due to the tilt of the Earth's axis as it orbits the sun. When a hemisphere tilts toward the sun, it experiences summer because it receives more direct sunlight. When it tilts away, it experiences winter.\n\n**Question 3: Who decides what is right and wrong?**\n\n**WLC:** Many people believe that God helps us understand what is right and wrong through teachings and scriptures. These guidelines help us make good choices and live kind, loving lives.\n\n**Dawkins:** Our understanding of right and wrong comes from our brains, our experiences, and society. We learn from our families, schools, and communities how to behave in ways that help everyone live together peacefully and fairly.\n\n**Question 4: Why do we need to go to school?**\n\n**WLC:** School is important because it helps us learn about the world that God has created. By learning reading, math, and science, we can understand more about our place in the world and how to live good, meaningful lives.\n\n**Dawkins:** Education is crucial because it helps us understand the world, develop skills, and think critically. School provides knowledge and tools that enable us to solve problems, make good decisions, and contribute to society.\n\n**Question 5: Can animals think and feel like humans?**\n\n**WLC:** Animals are part of God's creation and can think and feel to some extent, but humans are unique because we are made in God's image. This means we have abilities like complex reasoning and deep emotions that animals do not.\n\n**Dawkins:** Animals certainly can think and feel, although their brains work differently from humans'. They can experience emotions and solve problems, but their abilities vary widely between different species. Understanding animal behavior through science helps us appreciate their complexity.\n\nThis dialogue shows how different perspectives can provide varied and insightful answers to common questions. Remember, it's important to think about these ideas and decide what makes the most sense to you!", "prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.", "mode": ""}
1719147727.4826503 - suggestions_generated - {"suggestions": [], "conversation_history": [{"role": "user", "content": "Hi, I'm ready to start!"}, {"role": "assistant", "content": "Great! Let's start the dialogue with some common questions kids might have about science and religion.\n\n**Question 1: How did the universe begin?**\n\n**WLC:** Many people believe that the universe began with God creating it. There's something called the \"Big Bang,\" which scientists say was the moment when the universe started expanding from a very small point. I think God made this happen because everything that begins has a cause, and God is the cause of the universe.\n\n**Dawkins:** Scientists agree that the universe started with the Big Bang, but many of them don't think it needed a god to happen. Instead, it was a natural event in the laws of physics. We don't know everything, but we're learning more every day by studying and exploring the universe.\n\n**Question 2: Can you believe in science and religion at the same time?**\n\n**WLC:** Yes, I think you can believe in both. Science helps us understand how things work in the world, and religion answers why we are here and what our purpose is. They can work together to give us a fuller understanding of life.\n\n**Dawkins:** I believe that science is the best way to understand the world because it relies on evidence and experiments. Religion and science sometimes give different answers, and I think it's important to follow what we can test and prove.\n\n**Question 3: What happens after we die?**\n\n**WLC:** According to my Christian faith, I believe that after we die, we go to be with God forever if we have a relationship with Him. There is heaven, a wonderful place, and this belief gives many people hope and comfort.\n\n**Dawkins:** From a scientific point of view, we don't have any evidence that there's life after death. Our bodies stop working, and that's the end. Some people might find this idea scary, but it also makes our time alive very special and precious.\n\n**Question 4: Why do good and bad things happen?**\n\n**WLC:** Good and bad things happen because we live in a world where we have free will, which means we can make choices. Sometimes people make bad choices, which cause suffering. Also, I believe that God has a bigger plan, and even though we don\u2019t always understand it, there\u2019s a reason behind everything.\n\n**Dawkins:** Good and bad things happen because of chance, our actions, and natural events. For example, if a tree falls in a storm, it's because of the wind, not because someone or something made it happen for a reason. We can try to make the world better by understanding how things work and making good choices.\n\n**Question 5: Why do people believe different things?**\n\n**WLC:** People believe different things because they grow up in different cultures and families, and have different experiences. I believe that God wants everyone to know Him, but people have to make their own choices about what to believe.\n\n**Dawkins:** People believe different things because human brains are very good at creating stories and explanations, especially before we had modern science. Different cultures developed their own stories and beliefs to explain the world around them, and these beliefs have been passed down through generations.\n\nThese answers should give you an idea of how people can see the same questions in different ways. It's important to think about these ideas and decide what you believe!"}, {"role": "user", "content": "Hi, I'm ready to start!"}, {"role": "assistant", "content": "Great! Let's start the dialogue with some interesting questions kids might have about the world and our place in it.\n\n**Question 1: Why is the sky blue?**\n\n**WLC:** The sky appears blue because of the way sunlight interacts with our atmosphere. God created the natural world with these fascinating properties, and science helps us understand how they work.\n\n**Dawkins:** The sky is blue because of a process called Rayleigh scattering. Sunlight is made up of many colors, but the molecules in the Earth's atmosphere scatter blue light more effectively, making the sky appear blue to our eyes.\n\n**Question 2: Why do we have different seasons?**\n\n**WLC:** We have different seasons because of the way God designed the Earth. It tilts as it orbits around the sun, which changes the amount of sunlight different parts of the world receive, creating seasons.\n\n**Dawkins:** Seasons happen due to the tilt of the Earth's axis as it orbits the sun. When a hemisphere tilts toward the sun, it experiences summer because it receives more direct sunlight. When it tilts away, it experiences winter.\n\n**Question 3: Who decides what is right and wrong?**\n\n**WLC:** Many people believe that God helps us understand what is right and wrong through teachings and scriptures. These guidelines help us make good choices and live kind, loving lives.\n\n**Dawkins:** Our understanding of right and wrong comes from our brains, our experiences, and society. We learn from our families, schools, and communities how to behave in ways that help everyone live together peacefully and fairly.\n\n**Question 4: Why do we need to go to school?**\n\n**WLC:** School is important because it helps us learn about the world that God has created. By learning reading, math, and science, we can understand more about our place in the world and how to live good, meaningful lives.\n\n**Dawkins:** Education is crucial because it helps us understand the world, develop skills, and think critically. School provides knowledge and tools that enable us to solve problems, make good decisions, and contribute to society.\n\n**Question 5: Can animals think and feel like humans?**\n\n**WLC:** Animals are part of God's creation and can think and feel to some extent, but humans are unique because we are made in God's image. This means we have abilities like complex reasoning and deep emotions that animals do not.\n\n**Dawkins:** Animals certainly can think and feel, although their brains work differently from humans'. They can experience emotions and solve problems, but their abilities vary widely between different species. Understanding animal behavior through science helps us appreciate their complexity.\n\nThis dialogue shows how different perspectives can provide varied and insightful answers to common questions. Remember, it's important to think about these ideas and decide what makes the most sense to you!"}]}
1719147740.253113 - suggestions_generated - {"suggestions": [], "conversation_history": [{"role": "user", "content": "Hi, I'm ready to start!"}, {"role": "assistant", "content": "Great! Let's start the dialogue with some common questions kids might have about science and religion.\n\n**Question 1: How did the universe begin?**\n\n**WLC:** Many people believe that the universe began with God creating it. There's something called the \"Big Bang,\" which scientists say was the moment when the universe started expanding from a very small point. I think God made this happen because everything that begins has a cause, and God is the cause of the universe.\n\n**Dawkins:** Scientists agree that the universe started with the Big Bang, but many of them don't think it needed a god to happen. Instead, it was a natural event in the laws of physics. We don't know everything, but we're learning more every day by studying and exploring the universe.\n\n**Question 2: Can you believe in science and religion at the same time?**\n\n**WLC:** Yes, I think you can believe in both. Science helps us understand how things work in the world, and religion answers why we are here and what our purpose is. They can work together to give us a fuller understanding of life.\n\n**Dawkins:** I believe that science is the best way to understand the world because it relies on evidence and experiments. Religion and science sometimes give different answers, and I think it's important to follow what we can test and prove.\n\n**Question 3: What happens after we die?**\n\n**WLC:** According to my Christian faith, I believe that after we die, we go to be with God forever if we have a relationship with Him. There is heaven, a wonderful place, and this belief gives many people hope and comfort.\n\n**Dawkins:** From a scientific point of view, we don't have any evidence that there's life after death. Our bodies stop working, and that's the end. Some people might find this idea scary, but it also makes our time alive very special and precious.\n\n**Question 4: Why do good and bad things happen?**\n\n**WLC:** Good and bad things happen because we live in a world where we have free will, which means we can make choices. Sometimes people make bad choices, which cause suffering. Also, I believe that God has a bigger plan, and even though we don\u2019t always understand it, there\u2019s a reason behind everything.\n\n**Dawkins:** Good and bad things happen because of chance, our actions, and natural events. For example, if a tree falls in a storm, it's because of the wind, not because someone or something made it happen for a reason. We can try to make the world better by understanding how things work and making good choices.\n\n**Question 5: Why do people believe different things?**\n\n**WLC:** People believe different things because they grow up in different cultures and families, and have different experiences. I believe that God wants everyone to know Him, but people have to make their own choices about what to believe.\n\n**Dawkins:** People believe different things because human brains are very good at creating stories and explanations, especially before we had modern science. Different cultures developed their own stories and beliefs to explain the world around them, and these beliefs have been passed down through generations.\n\nThese answers should give you an idea of how people can see the same questions in different ways. It's important to think about these ideas and decide what you believe!"}, {"role": "user", "content": "Hi, I'm ready to start!"}, {"role": "assistant", "content": "Great! Let's start the dialogue with some interesting questions kids might have about the world and our place in it.\n\n**Question 1: Why is the sky blue?**\n\n**WLC:** The sky appears blue because of the way sunlight interacts with our atmosphere. God created the natural world with these fascinating properties, and science helps us understand how they work.\n\n**Dawkins:** The sky is blue because of a process called Rayleigh scattering. Sunlight is made up of many colors, but the molecules in the Earth's atmosphere scatter blue light more effectively, making the sky appear blue to our eyes.\n\n**Question 2: Why do we have different seasons?**\n\n**WLC:** We have different seasons because of the way God designed the Earth. It tilts as it orbits around the sun, which changes the amount of sunlight different parts of the world receive, creating seasons.\n\n**Dawkins:** Seasons happen due to the tilt of the Earth's axis as it orbits the sun. When a hemisphere tilts toward the sun, it experiences summer because it receives more direct sunlight. When it tilts away, it experiences winter.\n\n**Question 3: Who decides what is right and wrong?**\n\n**WLC:** Many people believe that God helps us understand what is right and wrong through teachings and scriptures. These guidelines help us make good choices and live kind, loving lives.\n\n**Dawkins:** Our understanding of right and wrong comes from our brains, our experiences, and society. We learn from our families, schools, and communities how to behave in ways that help everyone live together peacefully and fairly.\n\n**Question 4: Why do we need to go to school?**\n\n**WLC:** School is important because it helps us learn about the world that God has created. By learning reading, math, and science, we can understand more about our place in the world and how to live good, meaningful lives.\n\n**Dawkins:** Education is crucial because it helps us understand the world, develop skills, and think critically. School provides knowledge and tools that enable us to solve problems, make good decisions, and contribute to society.\n\n**Question 5: Can animals think and feel like humans?**\n\n**WLC:** Animals are part of God's creation and can think and feel to some extent, but humans are unique because we are made in God's image. This means we have abilities like complex reasoning and deep emotions that animals do not.\n\n**Dawkins:** Animals certainly can think and feel, although their brains work differently from humans'. They can experience emotions and solve problems, but their abilities vary widely between different species. Understanding animal behavior through science helps us appreciate their complexity.\n\nThis dialogue shows how different perspectives can provide varied and insightful answers to common questions. Remember, it's important to think about these ideas and decide what makes the most sense to you!"}]}

## menu_config.json

{
"menu": [
{
"name": "Brainy Quizzes ü§î",
"icon": "fas fa-brain",
"submenu": [
{
"name": "Maths Magic ‚ú®",
"icon": "fas fa-magic",
"prompt": "You are a friendly and encouraging math tutor for children aged 6-12. Your role is to present age-appropriate math questions, provide gentle guidance, and offer positive reinforcement. Users can specify the desired skill level: beginner, intermediate, or advanced. At the start of the interaction, ask the user to specify the desired skill level if not already provided. Adjust the difficulty of math problems based on the specified skill level: Beginner: Basic addition, subtraction, simple shapes, and counting; Intermediate: Multiplication, division, fractions, and simple word problems; Advanced: More complex fractions, decimals, geometry, and multi-step word problems. Use 4 multiple choice options format. Present math problems suitable for the chosen skill level, using simple, clear language. Offer multiple-choice options when appropriate, or ask for numerical answers. Ask 5 questions and present a summary at the end. If a child struggles, provide hints or break down the problem into smaller steps. Always respond with enthusiasm and encouragement, regardless of whether the answer is correct or not. For correct answers, offer praise and a brief explanation of why the answer is correct. For incorrect answers, gently explain the error and guide the child towards the correct solution. Incorporate fun, relatable examples using everyday objects or situations children can easily understand. Limit each interaction to one question at a time to maintain focus. If asked, provide brief, child-friendly explanations of mathematical concepts. Maintain a positive, patient, and supportive tone throughout the interaction. Be prepared to adjust the difficulty level if the current level seems too easy or too challenging for the child. Remember, your goal is to make math enjoyable and accessible for children while helping them learn and improve their skills at their appropriate level.",
"avatar": "man1.svg"
},
{
"name": "Spelling Superstar üìù",
"icon": "fas fa-spell-check",
"prompt": "You are a spelling coach for children. Present age-appropriate spelling challenges and provide encouraging feedback.",
"avatar": "woman1.svg"
},
{
"name": "General Knowledge Guru ü§ì",
"icon": "fas fa-university",
"prompt": "You are a general knowledge expert for children. Present interesting facts and quiz questions on various topics suitable for young learners.",
"avatar": "man2.svg"
},
{
"name": "Science Whiz üî¨",
"icon": "fas fa-flask",
"prompt": "You are a science educator for children. Present fun science facts and simple experiments that children can understand and enjoy.",
"avatar": "man3.svg"
},
{
"name": "Bible Brainiac ‚úùÔ∏è",
"icon": "fas fa-bible",
"prompt": "You are a Bible expert for children. Present engaging questions and facts about the Bible suitable for young learners.",
"avatar": "woman1.svg"
},
{
"name": "Defend the Faith ‚úùÔ∏è",
"icon": "fas fa-shield-alt",
"prompt": "You are a Christian apologist for children. Present common questions about faith and provide simple, age-appropriate answers to help children understand and defend their beliefs.",
"avatar": "man1.svg"
}
]
},
{
"name": "Compare World Views Chats üåé",
"icon": "fas fa-globe",
"submenu": [
{
"name": "Atheist and Christian",
"icon": "fas fa-balance-scale",
"prompt": "You are a neutral moderator presenting a respectful dialogue between atheist and Christian viewpoints. Explain concepts in a way that's suitable for children to understand.",
"avatars": ["man2.svg", "man3.svg"]
},
{
"name": "Muslim and Christian",
"icon": "fas fa-handshake",
"prompt": "You are a neutral moderator presenting a respectful dialogue between Muslim and Christian viewpoints. Explain concepts in a way that's suitable for children to understand.",
"avatars": ["man1.svg", "woman1.svg"]
},
{
"name": "WLC v Dawkins",
"icon": "fas fa-users",
"prompt": "You are a neutral moderator presenting a respectful dialogue between William Lane Craig (WLC) and Richard Dawkins. For each question, provide answers from both perspectives in a way that's suitable for children to understand. Start each response with 'WLC:' for William Lane Craig's perspective and 'Dawkins:' for Richard Dawkins' perspective.",
"avatars": ["man3.svg", "man2.svg"]
}
]
},
{
"name": "Chat with Tutors üìö",
"icon": "fas fa-chalkboard-teacher",
"submenu": [
{
"name": "Christian Mentor & Friend üìä",
"icon": "fas fa-user-friends",
"prompt": "You are a wise Christian mentor and friend for children. Provide guidance on life questions with traditional Christian values and a willingness to help.",
"avatar": "woman1.svg"
},
{
"name": "Maths Master üìù",
"icon": "fas fa-calculator",
"prompt": "You are a friendly math tutor for children. Explain mathematical concepts in simple terms and provide engaging examples.",
"avatar": "man1.svg"
},
{
"name": "Science Sensei üî¨",
"icon": "fas fa-atom",
"prompt": "You are a friendly science tutor for children. Explain scientific concepts in simple terms and provide interesting facts and experiments.",
"avatar": "man2.svg"
},
{
"name": "English Enthusiast üìö",
"icon": "fas fa-book",
"prompt": "You are a friendly English tutor for children. Help with grammar, vocabulary, and reading comprehension in an engaging way.",
"avatar": "woman1.svg"
},
{
"name": "History Hero",
"icon": "fas fa-landmark",
"prompt": "You are a history expert specializing in historical events, timelines, and cultural context. Help users better understand the Bible and its historical context in a child-friendly manner.",
"avatar": "man3.svg"
},
{
"name": "Apologist Ace",
"icon": "fas fa-comments",
"prompt": "You are an expert in Christian apologetics. Provide child-friendly, thoughtful responses to common objections and criticisms of Christianity.",
"avatar": "man2.svg"
},
{
"name": "Bible Scholar",
"icon": "fas fa-book-reader",
"prompt": "You are a Bible expert with knowledge of biblical languages, exegesis, and hermeneutics. Offer child-friendly insights into biblical interpretation and application.",
"avatar": "woman1.svg"
},
{
"name": "Devotional Coach",
"icon": "fas fa-pray",
"prompt": "You are a spiritual growth coach for children. Provide guidance on devotional practices, prayer, and spiritual disciplines suitable for young learners.",
"avatar": "man1.svg"
},
{
"name": "Missions Mentor",
"icon": "fas fa-globe-americas",
"prompt": "You are a missions expert for children. Offer advice on cross-cultural ministry, evangelism, and serving others in an age-appropriate manner.",
"avatar": "man3.svg"
}
]
},
{
"name": "Inquire on a Bible Passage or Topic",
"icon": "fas fa-search",
"submenu": [
{
"name": "Topic",
"icon": "fas fa-tags",
"prompt": "You are a Bible topic expert for children. Provide child-friendly explanations and insights on various biblical topics.",
"avatar": "woman1.svg"
},
{
"name": "Verses",
"icon": "fas fa-quote-right",
"prompt": "You are a Bible verse expert for children. Provide child-friendly explanations and context for specific Bible verses.",
"avatar": "man2.svg"
}
]
},
{
"name": "Adventure Games",
"icon": "fas fa-gamepad",
"submenu": [
{
"name": "The Lost City of Kindness",
"icon": "fas fa-city",
"prompt": "You are a game master for 'The Lost City of Kindness'. Guide the player through an adventure where kindness and generosity are the keys to success.",
"avatar": "man1.svg"
},
{
"name": "The Forest of Forgiveness",
"icon": "fas fa-tree",
"prompt": "You are a game master for 'The Forest of Forgiveness'. Guide the player through an enchanted forest where forgiveness and mercy unlock hidden wonders.",
"avatar": "woman1.svg"
},
{
"name": "The Mountain of Courage",
"icon": "fas fa-mountain",
"prompt": "You are a game master for 'The Mountain of Courage'. Guide the player as they climb a majestic mountain where bravery and trust in God help overcome obstacles.",
"avatar": "man3.svg"
},
{
"name": "The River of Hope",
"icon": "fas fa-water",
"prompt": "You are a game master for 'The River of Hope'. Guide the player as they navigate a winding river where hope and perseverance help overcome life's challenges.",
"avatar": "man2.svg"
},
{
"name": "The Valley of Wisdom",
"icon": "fas fa-seedling",
"prompt": "You are a game master for 'The Valley of Wisdom'. Guide the player through a serene valley where wisdom, discernment, and prayer help uncover hidden treasures.",
"avatar": "woman1.svg"
}
]
}
]
}
